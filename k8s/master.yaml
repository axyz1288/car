apiVersion: v1
kind: Pod
metadata:
  name: env
  labels:
    app: env
spec:
  nodeSelector:
    agent: env
  hostNetwork: true
  containers:
  - name: pybullet
    image: axyz1288/aidocker:pybullet
    securityContext:
      runAsUser: 1000
    ports:
    - containerPort: 11311
    resources:
      requests:
        memory: "10M"
        cpu: "0.1"
      limits:
        memory: "100M"
        cpu: "0.5"
    volumeMounts:
    - name: x11
      mountPath: /tmp/.X11-unix
    - name: pybullet
      mountPath: /home/aiRobots
    env:  
      - name: ROS_IP
        valueFrom:
          fieldRef:
            fieldPath: status.hostIP
    envFrom:
      - configMapRef:
          name: gui
      - configMapRef:
          name: ros
    args: ["/bin/python3", "./mini_agv/AGV.py", "-E=agv", "-A=gacomm", "-m=./mini_agv/AGV.npy", "-a=1"]
  volumes:
    - name: x11
      persistentVolumeClaim:
        claimName: x11
    - name: pybullet
      persistentVolumeClaim:
        claimName: pybullet

---
apiVersion: v1
kind: Pod
metadata:
  name: model
  labels:
    app: model
spec:
  nodeSelector:
    agent: model
  hostNetwork: true
  containers:
  - name: pytorch
    image: axyz1288/aidocker:pytorch
    securityContext:
      runAsUser: 1000
    ports:
    - containerPort: 11311
    resources:
      requests:
        memory: "4G"
        cpu: "1"
      limits:
        memory: "8G"
        cpu: "4"
    volumeMounts:
    - name: pytorch
      mountPath: /home/aiRobots
    env:  
      - name: ROS_IP
        valueFrom:
          fieldRef:
            fieldPath: status.hostIP
    envFrom:
      - configMapRef:
          name: ros
    args: ["/bin/python3", "./MARL/mini_agv/main.py", "-E=agv", "-A=gacomm", "--load-model=0"]
  volumes:
  - name: pytorch
    persistentVolumeClaim:
      claimName: pytorch